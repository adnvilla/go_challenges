// Code generated by mockery v2.42.2. DO NOT EDIT.

package mock

import (
	domain "github.com/adnvilla/go_challenges/investment_api/src/domain/entity"
	mock "github.com/stretchr/testify/mock"
)

// MockCreditAssignmentRepository is an autogenerated mock type for the CreditAssignmentRepository type
type MockCreditAssignmentRepository struct {
	mock.Mock
}

type MockCreditAssignmentRepository_Expecter struct {
	mock *mock.Mock
}

func (_m *MockCreditAssignmentRepository) EXPECT() *MockCreditAssignmentRepository_Expecter {
	return &MockCreditAssignmentRepository_Expecter{mock: &_m.Mock}
}

// GetStatistics provides a mock function with given fields:
func (_m *MockCreditAssignmentRepository) GetStatistics() ([]domain.Statistic, error) {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetStatistics")
	}

	var r0 []domain.Statistic
	var r1 error
	if rf, ok := ret.Get(0).(func() ([]domain.Statistic, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() []domain.Statistic); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]domain.Statistic)
		}
	}

	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockCreditAssignmentRepository_GetStatistics_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetStatistics'
type MockCreditAssignmentRepository_GetStatistics_Call struct {
	*mock.Call
}

// GetStatistics is a helper method to define mock.On call
func (_e *MockCreditAssignmentRepository_Expecter) GetStatistics() *MockCreditAssignmentRepository_GetStatistics_Call {
	return &MockCreditAssignmentRepository_GetStatistics_Call{Call: _e.mock.On("GetStatistics")}
}

func (_c *MockCreditAssignmentRepository_GetStatistics_Call) Run(run func()) *MockCreditAssignmentRepository_GetStatistics_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockCreditAssignmentRepository_GetStatistics_Call) Return(_a0 []domain.Statistic, _a1 error) *MockCreditAssignmentRepository_GetStatistics_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockCreditAssignmentRepository_GetStatistics_Call) RunAndReturn(run func() ([]domain.Statistic, error)) *MockCreditAssignmentRepository_GetStatistics_Call {
	_c.Call.Return(run)
	return _c
}

// SaveStatistics provides a mock function with given fields: _a0
func (_m *MockCreditAssignmentRepository) SaveStatistics(_a0 domain.Statistic) error {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for SaveStatistics")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(domain.Statistic) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockCreditAssignmentRepository_SaveStatistics_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SaveStatistics'
type MockCreditAssignmentRepository_SaveStatistics_Call struct {
	*mock.Call
}

// SaveStatistics is a helper method to define mock.On call
//   - _a0 domain.Statistic
func (_e *MockCreditAssignmentRepository_Expecter) SaveStatistics(_a0 interface{}) *MockCreditAssignmentRepository_SaveStatistics_Call {
	return &MockCreditAssignmentRepository_SaveStatistics_Call{Call: _e.mock.On("SaveStatistics", _a0)}
}

func (_c *MockCreditAssignmentRepository_SaveStatistics_Call) Run(run func(_a0 domain.Statistic)) *MockCreditAssignmentRepository_SaveStatistics_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(domain.Statistic))
	})
	return _c
}

func (_c *MockCreditAssignmentRepository_SaveStatistics_Call) Return(_a0 error) *MockCreditAssignmentRepository_SaveStatistics_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockCreditAssignmentRepository_SaveStatistics_Call) RunAndReturn(run func(domain.Statistic) error) *MockCreditAssignmentRepository_SaveStatistics_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockCreditAssignmentRepository creates a new instance of MockCreditAssignmentRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockCreditAssignmentRepository(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockCreditAssignmentRepository {
	mock := &MockCreditAssignmentRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
